# Default configuration file for a Shasta assembly.

# For detailed information on all available options see here:
# https://chanzuckerberg.github.io/shasta/CommandLineOptions.html

# For information on running a small assembly for which 
# performance is not essential see here:
# https://chanzuckerberg.github.io/shasta/QuickStart.html

# For more information on running an assembly see here:
# https://chanzuckerberg.github.io/shasta/Running.html

# For information on optimizing assembly performance see here:
# https://chanzuckerberg.github.io/shasta/Performance.html



[Reads]

# The minimum read length. Reads shorter than this
# are skipped on input.
minReadLength = 10000

# Parameters for flagPalindromicReads.
# See the code for their meaning.
palindromicReads.maxSkip = 100
palindromicReads.maxMarkerFrequency = 10
palindromicReads.alignedFractionThreshold = 0.1
palindromicReads.nearDiagonalFractionThreshold = 0.1
palindromicReads.deltaThreshold = 100



[Kmers]

# This section contains parameters that control the
# generation of k-mers to be used as markers.

# The length of the k-mers used as markers.
k = 10

# The probability that a k-mer is a marker.
# This is approximately equal to the fraction
# of k-mers that will be used as markers.
probability = 0.1

# If suppressHighFrequencyMarkers is True, high frequency k-mers 
# are not used as markers. High frequency k-mers are those 
# with enrichment greater than the value specified by enrichmentThreshold.
# Enrichment is ratio of k-mer frequency in reads to random.
suppressHighFrequencyMarkers = False
enrichmentThreshold = 10.

# The absolute path of a file containing the k-mers
# to be used as markers, one per line.
# If this is empty, k-mers to be used as markers
# are selected according to the other options in the [Kmers] section.
# If this is not empty, all other options in the [Kmers] section
# are ignored except for k.
file = 



[MinHash]

# This section contains parameters that control the MinHash/LowHash algorithm
# used to find alignment candidates.

# The algorithm version to use.
version = 0

# The number of consecutive markers that define a MinHash/LowHash feature.
m = 4

# This defines how low a hash has to be to be used with the LowHash algorithm.
hashFraction = 0.01

# Parameters to control the number of MinHash/LowHash iterations.
# If --MinHash.minHashIterationCount is not zero, it specifies
# the exact number of MinHash iterations to be performed.
# If --MinHash.minHashIterationCount is 0, MinHash iteration is stopped
# when the average number of alignment candidates that each read is involved in "
#reaches alignmentCandidatesPerRead.
minHashIterationCount = 10
alignmentCandidatesPerRead = 20

# The minimum and maximum bucket size to be used by the MinHash/LowHash algoritm.
# Buckets of size less than the minimum or more than the maximum are ignored.
minBucketSize = 0
maxBucketSize = 10

# The minimum number of times a pair of oriented reads
# is found by the MinHash/LowHash algorithm for the pair to
# generate an overlap.
minFrequency = 2



[Align]

# This section contains parameters that control the alignment of
# oriented reads using an alignment graph.

# The alignment method to be used to create the read graph (0 or 1).
alignMethodForReadGraph = 0

# The alignment method to be used to create the marker graph (0 or 1).
alignMethodForMarkerGraph = 0

# The maximum number of markers that an alignment is allowed
# to skip on either of the oriented reads being aligned.
maxSkip = 30

# The maximum tolerable relative drift between successive markers
# of a marker alignment.
maxDrift = 30

# Marker frequency threshold.
# When computing an alignment between two oriented reads,
# marker kmers that appear more than this number of times
# in either of the two oriented reads are discarded
# (in both oriented reads).
maxMarkerFrequency = 10

# The minimum number of aligned markers in an alignment
# in order for the alignment to be considered good and usable.
minAlignedMarkerCount = 100

# The minimum fraction of aligned markers for an alignment to be used.
minAlignedFraction = 0.

# The maximum number of trim markers tolerated at the
# beginning and end of an alignment. There can be
# up this number of markers between the first/last aligned marker
# and the beginning/end of either oriented read
# for an alignment to be considered good and usable. 
maxTrim = 30

# The match score for marker alignments.
matchScore = 0

# The mismatch score for marker alignments.
mismatchScore = 0

# The gap score for marker alignments.
gapScore = 0

# If not zero, alignments between reads from the same nanopore channel
# and close in time are suppressed. The read meta data fields
# from the FASTA or FASTQ header are checked. If their difference, in
# absolute value, is less than the value of this option, the alignment
# is suppressed. This can help avoid assembly artifact.
# This check is only done if the two reads have identical meta data fields
# "runid", "sampleid", and "ch". 
# If any of these meta data fields are missing, this check is suppressed and this
# option has no effect.
sameChannelReadAlignment.suppressDeltaThreshold = 0



[ReadGraph]

# This section contains parameters that control
# the creation and processing of read graphs.

# Creation method (0=undirected, 1=directed).
# Under development. Leave at default value 0.
creationMethod = 0

# The maximum number of alignments to be kept for each read.
maxAlignmentCount = 6

# The minimum size (number of oriented reads) of
# a connected component to be kept.
minComponentSize = 100

# Argument maxChimericReadDistance for flagChimericReads.
maxChimericReadDistance = 2

# Maximum distance (edges) for flagCrossStrandReadGraphEdges.
# Set this to zero to entirely suppress flagCrossStrandReadGraphEdges.
crossStrandMaxDistance = 6

# Maximum number of alignments to be kept for each contained read
# (only used when creationMethod is 1). 
containedNeighborCount = 6

# Maximum number of alignments to be kept in each direction (forward, backward)
# for each uncontained read (only used when creationMethod is 1). 
uncontainedNeighborCountPerDirection = 3


[MarkerGraph]

# This section contains parameters that control
# the creation and processing of the global marker graph.

# The minimum and maximum coverage (number of markers)
# for a vertex of the marker graph.
# Vertices with coverage outside this range are collapsed
# away and not generated by computeMarkerGraphVertices.
minCoverage = 10
maxCoverage = 100

# Parameters for flagMarkerGraphWeakEdges (transitive reduction).
lowCoverageThreshold = 0
highCoverageThreshold = 256
maxDistance = 30
edgeMarkerSkipThreshold = 100

# Number of iterations for pruneMarkerGraphStrongSubgraph.
pruneIterationCount = 6

# Maximum lengths (in markers) used at each iteration of
# simplifyMarkerGraph. Make sure there are no blanks,
# just commas.
simplifyMaxLength = 10,100,1000

# Controls whether approximate reverse transitive reduction 
# of the marker graph is done.
reverseTransitiveReduction = False
        
        

[Assembly]

# This section contains parameters used during sequence assembly.

# Assembly strategy.
# Keep at default value 0. 
# Other options are under development and will not produce a usable assembly.
strategy = 0

# Maximum average edge coverage for a cross edge 
# of the assembly graph to be removed. 
crossEdgeCoverageThreshold = 3

markerGraphEdgeLengthThresholdForConsensus = 1000

# Do not change the the two parameters below except when testing
# some still experimental and undocumented features.
consensusCaller = Modal
useMarginPhase = False

# Set this to cause detailed coverage information to be stored.
# This can be used to calibrate the Bayesian model for repeat counts
# and for some types of analyses, but it slows down the assembly
# and uses additional huge page memory.
storeCoverageData = False

# The minimum length of an assembled segment for which coverage data 
# in csv format should be stored. If 0, no coverage data 
# in csv format is stored.
storeCoverageDataCsvLengthThreshold = 0



[Phasing]

# This sections contains options that control phasing.
# This functionality is under development and is
# only activated when Assembly.strategy is set to 1.
# This does not yet create useful assembly results
# and should not be used except for development.

# The minimum phasing similarity for an edge
# to be added to the phasing graph.
phasingSimilarityThreshold = 0.5

# The maximum number of phasing graph edges to be kept
# for each oriented read.
maxNeighborCount = 6

